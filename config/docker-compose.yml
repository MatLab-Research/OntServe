version: '3.8'

services:
  # PostgreSQL database for OntServe
  ontserve-db:
    image: pgvector/pgvector:pg16
    container_name: ontserve-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ontserve
      POSTGRES_USER: ontserve_user
      POSTGRES_PASSWORD: ${ONTSERVE_DB_PASSWORD:-ontserve_development_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5435:5432" # Use port 5435 to avoid conflict with system PostgreSQL
    volumes:
      - ontserve_pgdata:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./init-data.sql:/docker-entrypoint-initdb.d/02-init-data.sql:ro
    command: >
      postgres -c max_connections=100 -c shared_buffers=256MB -c effective_cache_size=1GB -c maintenance_work_mem=64MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200 -c work_mem=4MB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=8 -c max_parallel_workers_per_gather=4 -c max_parallel_workers=8 -c max_parallel_maintenance_workers=4
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ontserve_user -d ontserve" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - ontserve-network

  # Redis for caching (optional but recommended for production)
  ontserve-redis:
    image: redis:7-alpine
    container_name: ontserve-redis
    restart: unless-stopped
    ports:
      - "6380:6379" # Use port 6380 to avoid conflict
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - ontserve_redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ontserve-network

  # OntServe MCP Server (optional - can also be run standalone)
  ontserve-mcp:
    build:
      context: ..
      dockerfile: config/Dockerfile
    container_name: ontserve-mcp
    restart: unless-stopped
    environment:
      # Database configuration
      ONTSERVE_DB_URL: postgresql://ontserve_user:${ONTSERVE_DB_PASSWORD:-ontserve_development_password}@ontserve-db:5432/ontserve

      # Redis configuration (optional)
      ONTSERVE_REDIS_URL: redis://ontserve-redis:6379

      # Server configuration
      ONTSERVE_HOST: 0.0.0.0
      ONTSERVE_MCP_PORT: 8082
      ONTSERVE_DEBUG: ${ONTSERVE_DEBUG:-false}

      # Performance tuning
      ONTSERVE_MAX_CONNECTIONS: 50
      ONTSERVE_CONNECTION_TIMEOUT: 30
      ONTSERVE_QUERY_TIMEOUT: 300

      # Feature flags
      ONTSERVE_ENABLE_VECTOR_SEARCH: "true"
      ONTSERVE_ENABLE_AUDIT_LOG: "true"
      ONTSERVE_ENABLE_CACHING: "true"
    ports:
      - "8082:8082"
    depends_on:
      ontserve-db:
        condition: service_healthy
      ontserve-redis:
        condition: service_healthy
    volumes:
      - ontserve_logs:/app/logs
    networks:
      - ontserve-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  ontserve_pgdata:
    driver: local
  ontserve_redis_data:
    driver: local
  ontserve_logs:
    driver: local

networks:
  ontserve-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16
